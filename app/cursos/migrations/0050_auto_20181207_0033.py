# Generated by Django 2.1.2 on 2018-12-07 00:33

import cursos.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cursos', '0049_auto_20181128_1339'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='alloweddomain',
            options={'verbose_name': 'Dominio habilitado', 'verbose_name_plural': 'Dominios habilitados'},
        ),
        migrations.AlterModelOptions(
            name='allowedemail',
            options={'verbose_name': 'email habilitado', 'verbose_name_plural': 'emails habilitados'},
        ),
        migrations.AlterModelOptions(
            name='course',
            options={'verbose_name': 'Curso', 'verbose_name_plural': 'Cursos'},
        ),
        migrations.AddField(
            model_name='alloweddomain',
            name='enabled_courses',
            field=models.ManyToManyField(blank=True, related_name='enabled_domains', to='cursos.Course'),
        ),
        migrations.AddField(
            model_name='allowedemail',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Usuario'),
        ),
        migrations.AlterField(
            model_name='alloweddomain',
            name='domain',
            field=models.CharField(help_text='Un dominio de internet sin incluir la @. Por ejemplo, para habilitar todos los mails "@gmail.com", ingrese "gmail.com"', max_length=63, unique=True, validators=[django.core.validators.RegexValidator(re.compile('((?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\\.)+)(?:[A-Z0-9-]{2,63}(?<!-))\\Z', 2), message='El valor ingresado no es un dominio válido'), cursos.models.no_at_validator], verbose_name='Dominio'),
        ),
        migrations.AlterField(
            model_name='allowedemail',
            name='area',
            field=models.ForeignKey(blank=True, help_text='Es el área a la cual pertenece este usuario', null=True, on_delete=django.db.models.deletion.PROTECT, to='cursos.Area', verbose_name='Área/Departamento/Sector'),
        ),
        migrations.AlterField(
            model_name='area',
            name='enabled_courses',
            field=models.ManyToManyField(blank=True, help_text='Son los cursos que podrán realizar los usuarios que pertenezcan a esta área', null=True, related_name='enabled_areas', to='cursos.Course', verbose_name='Cursos habilitados'),
        ),
        migrations.AlterField(
            model_name='area',
            name='name',
            field=models.CharField(help_text='Nombre del área/departamento/sector', max_length=256, unique=True, verbose_name='Nombre'),
        ),
        migrations.AlterField(
            model_name='course',
            name='certificate_template',
            field=models.ImageField(null=True, upload_to='course_certificate', verbose_name='Plantilla del certificado'),
        ),
        migrations.AlterField(
            model_name='course',
            name='description',
            field=models.TextField(verbose_name='Descripción'),
        ),
        migrations.AlterField(
            model_name='course',
            name='title',
            field=models.CharField(max_length=128, verbose_name='Título'),
        ),
    ]
