"""
Django settings for videocursos project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from decouple import config, UndefinedValueError
from datetime import timedelta
from celery.schedules import crontab


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    # 'admin_interface',
    # 'colorfield',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'django.forms',
    'anymail',
    'compressor',
    'sass_processor',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'django_extensions',
    'solo',  # Singleton models
    'rest_framework',
    'session_security',
    'crispy_forms',
    'imagekit',
    'ordered_model',
    'corsheaders',
    'widget_tweaks',
    'users.apps.UsersAppConfig',  # para User model
    'cursos',
    'axes',
    'encuestas',
    'foros',
    'mensajes',
    'backoffice',
    'tareas',
    'streaming',
    'pagos',
    'public',
    # 'silk', # tiene que estar comentado en uso normal. descomentar solo para profiling en entorno no prod
]

MIDDLEWARE = [
    # 'silk.middleware.SilkyMiddleware',   # tiene que estar comentado en uso normal. descomentar solo para profiling en entorno no prod
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'session_security.middleware.SessionSecurityMiddleware',
    'cursos.middlewares.OneSessionPerUserMiddleware',
    'encuestas.middlewares.EncuestaPendienteMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


AXES_FAILURE_LIMIT = 3
AXES_LOCK_OUT_AT_FAILURE = True
AXES_COOLOFF_TIME = timedelta(seconds=60)

ROOT_URLCONF = 'videocursos.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            str(os.path.join(BASE_DIR, 'templates')),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django_settings_export.settings_export',
            ],
        },
    },
]

CRISPY_TEMPLATE_PACK = 'bootstrap4'

WSGI_APPLICATION = 'videocursos.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('POSTGRES_DB', default='postgres'),
        'USER': config('POSTGRES_USER', default='postgres'),
        'PASSWORD': config('POSTGRES_PASSWORD'),
        'HOST': config('POSTGRES_HOST', default='postgres'),
        'PORT': config('POSTGRES_PORT', default=5432, cast=int),
        'ATOMIC_REQUESTS': True
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.PyLibMCCache',
        'LOCATION': config('MEMCACHED_LOCATION', 'memcached:11211'),
    }
}


# AUTHENTICATION
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/dev/ref/settings/#authentication-backends
AUTHENTICATION_BACKENDS = [
    'axes.backends.AxesModelBackend',
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
    'users.auth.backends.JWTBackend',
]
# https://docs.djangoproject.com/en/dev/ref/settings/#auth-user-model
AUTH_USER_MODEL = 'users.User'
# https://docs.djangoproject.com/en/dev/ref/settings/#login-redirect-url
LOGIN_REDIRECT_URL = 'users:redirect'
# https://docs.djangoproject.com/en/dev/ref/settings/#login-url
LOGIN_URL = '/publico/'

# PASSWORDS
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/dev/ref/settings/#password-hashers
PASSWORD_HASHERS = [
    # https://docs.djangoproject.com/en/dev/topics/auth/passwords/#using-argon2-with-django
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
]
# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

SITE_ID = 1

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'es-ar'

TIME_ZONE = 'America/Argentina/Buenos_Aires'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)


MEDIA_ROOT = config('MEDIA_ROOT', '/srv/uploads')
MEDIA_URL = '/uploads/'

# Los thumbnails de los cursos los levanto directo con el Nginx (/uploads/course_thumbnails/)
# porque el nginx corre con user nginx pero Django corre con root (y en distintos containers)
FILE_UPLOAD_PERMISSIONS = 0o644


# https://github.com/johnsensible/django-sendfile
SENDFILE_ROOT = '/srv/sendfile'
SENDFILE_URL = '/sendfile'
# TODO: El sendfile de Nginx no me funcion√≥...
#SENDFILE_BACKEND = 'sendfile.backends.nginx'
SENDFILE_BACKEND = 'sendfile.backends.simple'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = config('STATIC_ROOT', '/srv/public_html/static')
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'npm.finders.NpmFinder',
    'sass_processor.finders.CssFinder',
    'compressor.finders.CompressorFinder',
]
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

NPM_FILE_PATTERNS = {
    'js-cookie': ['src/js.cookie.js'],
    'holderjs': ['holder.min.js'],
    'raven-js': ['dist/raven.min.js'],
    '@vimeo/player': ['dist/player.min.js', 'dist/player.es.js'],
    # '@fortawesome/fontawesome-free': [
    #     'css/*',
    #     'webfonts/*',
    #     'svgs/*',
    #     'js/*',
    #     'sprites/*',
    # ],
    'bootstrap': ['dist/*'],
    'popper.js': ['dist/*'],
}

COMPRESS_ENABLED = True
COMPRESS_CSS_HASHING_METHOD = 'content'

# django-allauth
# ------------------------------------------------------------------------------
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_ALLOW_REGISTRATION = True
# https://django-allauth.readthedocs.io/en/latest/configuration.html
ACCOUNT_AUTHENTICATION_METHOD = 'email'
# https://django-allauth.readthedocs.io/en/latest/configuration.html
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_CONFIRM_EMAIL_ON_GET = True
# https://django-allauth.readthedocs.io/en/latest/configuration.html
ACCOUNT_EMAIL_VERIFICATION = 'optional'
# https://django-allauth.readthedocs.io/en/latest/configuration.html
ACCOUNT_ADAPTER = 'users.adapters.AccountAdapter'
# https://django-allauth.readthedocs.io/en/latest/configuration.html
SOCIALACCOUNT_ADAPTER = 'users.adapters.SocialAccountAdapter'
ACCOUNT_EMAIL_CONFIRMATION_HMAC = False



SESSION_COOKIE_SECURE = True
SESSION_COOKIE_HTTPONLY = False

DEFAULT_FROM_EMAIL = 'Soporte <soporte@atenea.app>'
if DEBUG:
    EMAIL_HOST = 'smtp.mailtrap.io'
    EMAIL_HOST_USER = 'deb39c4655c9d4'
    EMAIL_HOST_PASSWORD = config('MAILTRAP_HOST_PASSWORD')
    EMAIL_PORT = '2525'

    # django-debug-toolbar
    INSTALLED_APPS += ['debug_toolbar']
    MIDDLEWARE = ['debug_toolbar.middleware.DebugToolbarMiddleware'] + MIDDLEWARE
    # INTERNAL_IPS = ['172.19.0.2']  # This should be nginx's IP

else:
    EMAIL_BACKEND = "anymail.backends.mailgun.EmailBackend"  # or sendgrid.EmailBackend, or...
    ANYMAIL = {
        # (exact settings here depend on your ESP...)
        "MAILGUN_API_KEY": config('MAILGUN_API_KEY'),  # ej.: master_MAILGUN_API_KEY, production_MAILGUN_API_KEY
        #"MAILGUN_SENDER_DOMAIN": f'mg.{config("VIRTUAL_HOST")}',  # mg.dev.amphi.com.ar
        "MAILGUN_SENDER_DOMAIN": 'mg.atenea.app'
    }


SUPPORT_EMAIL = 'soporte@atenea.app'
EMAIL_SUBJECT_PREFIX = '[UBA] '


try:
    if config('SENTRY_DSN'):
        import sentry_sdk
        from sentry_sdk.integrations.django import DjangoIntegration

        sentry_sdk.init(
            dsn=config('SENTRY_DSN'),
            integrations=[DjangoIntegration()],

            # If you wish to associate users to errors (assuming you are using
            # django.contrib.auth) you may enable sending PII data.
            send_default_pii=True
        )
        #
        # INSTALLED_APPS += [ 'raven.contrib.django.raven_compat' ]
        # RAVEN_CONFIG = {
        #     'dsn': config('SENTRY_DSN'),
        #     # If you are using git, you can also automatically configure the
        #     # release based on the git info.
        #     #'release': raven.fetch_git_sha(repo.working_dir),
        #     'release': config('GIT_COMMIT', default='git-unknown'),
        # }
except UndefinedValueError:
    pass

SENTRY_FRONTEND_DSN = config('SENTRY_FRONTEND_DSN', default='invalid')

# https://github.com/jakubroztocil/django-settings-export
SETTINGS_EXPORT = [
    'DEBUG',
    'SENTRY_FRONTEND_DSN',
    'URL_PORTAL_EMPLEO'
]

# https://github.com/pyexcel-webwares/django-excel
FILE_UPLOAD_HANDLERS = ("django_excel.ExcelMemoryFileUploadHandler",
                        "django_excel.TemporaryExcelFileUploadHandler")


FORM_RENDERER = 'django.forms.renderers.TemplatesSetting'

# Session security settings
SESSION_SECURITY_WARN_AFTER = 25*60  # 25 minutos
SESSION_SECURITY_EXPIRE_AFTER = 30*60  # 30 minutos
SESSION_EXPIRE_AT_BROWSER_CLOSE = True


# Silk profiler options. https://github.com/jazzband/django-silk

SILKY_PYTHON_PROFILER = True
SILKY_PYTHON_PROFILER_BINARY = True
SILKY_META = True


# Celery settings
CELERY_BROKER_URL = config('CELERY_BROKER_URL', 'amqp://everycompliance:rabbitmq@rabbitmq:5672/django')
CELERY_TIMEZONE = 'America/Argentina/Buenos_Aires'
CELERY_BEAT_SCHEDULE = {
    'broadcasts-set-live': {
        'task': 'broadcasts_set_live',
        'schedule': 20
    }
}

# Descomentar para usar ng serve
# https://github.com/adamchainz/django-cors-headers
CORS_ORIGIN_ALLOW_ALL = True


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        # Las APIs que hicimos son en general para el admin_light salvo la de tracking de videos,
        # que tiene setteado de forma expl√≠cita su permiso en el ViewSet
        'rest_framework.permissions.IsAdminUser',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
    ]
}

# Configuraci√≥n de pagos
PAYMENT_HOST = config("VIRTUAL_HOST")
PAYMENT_USES_SSL = True
PAYMENT_MODEL = 'pagos.Pago'
# use sandbox
PAYMENT_VARIANTS = {
    'paypal': (
        'payments.paypal.PaypalProvider',
        {
            # TODO: Sacar de env vars
            'client_id': 'Aeoisp_LN__98jgYJk8UdSp9SoxQNvgAOuUq7cN6ucf5BXOd8K1UzFgwW6hYQ5yueT2qtGibsHyBjvfU',
            'secret': 'EHdJp8lCQIcZr0-PIJJJ2ZyOObZXfIhx1jpS-E8grOYcn2fY6MncsKO0Pt2sbGJiRDXct6CemVewME1Y',
            'endpoint': 'https://api.paypal.com',
            'capture': True
        }
    )
}


MOSTRAR_PRECIO_CURSO = False

JWT_KEY = config('JWT_KEY')
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=365),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=365),
    # 'ROTATE_REFRESH_TOKENS': False,
    # 'BLACKLIST_AFTER_ROTATION': True,
    #
    # 'ALGORITHM': 'HS256',
    'SIGNING_KEY': JWT_KEY,
    # 'VERIFYING_KEY': None,
    # 'AUDIENCE': None,
    'ISSUER': None,
    #
    'AUTH_HEADER_TYPES': ('Bearer',),
    # 'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'sub',
    #
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.UntypedToken',),
    # 'TOKEN_TYPE_CLAIM': 'token_type',
    #
    # 'JTI_CLAIM': 'jti',
    #
    # 'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    # 'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    # 'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

URL_PORTAL_EMPLEO = config('URL_PORTAL_EMPLEO')
API_NOTIFICACIONES_URL = config('API_NOTIFICACIONES_URL')  # 'https://api-desa.portalempleo.gob.ar/Contenidos/cargarNotificacion'
API_NOTIFICACIONES_APIKEY = config('API_NOTIFICACIONES_APIKEY')